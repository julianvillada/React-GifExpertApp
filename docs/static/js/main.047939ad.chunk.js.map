{"version":3,"sources":["Components/AddCategory.js","helpers/GetGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAMaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmB5C,OACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,eAAeN,GAEZE,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAe,MAMf,SACG,uBACCO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,0DAE0CC,UAAWH,GAFrD,sDAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIDA,EAAKC,OAJJ,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVrB,kBAcbM,GAda,4CAAH,sDCATO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGlC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAKA,QCHJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAElBd,mBAAS,CAC/BqB,KAAM,GACNa,SAAQ,IAJgC,mBAErCC,EAFqC,KAE9BC,EAF8B,KA2BxC,OApBJC,qBAAW,WAEPxB,EAASC,GACRwB,MAAM,SAAAC,GAELC,YAAY,WACVJ,EAAU,CACRf,KAAMkB,EACNL,SAAQ,MAEX,UAIJ,CAAEpB,IAMMqB,EDxB0BM,CAAc3B,GAAlCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAGrB,OACI,qCACI,oBAAIJ,UAAU,iBAAd,SAAiChB,IAE/BoB,GAAW,mBAAGJ,UAAU,kCAAb,wBACb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEUjBiB,EAxBM,WAAO,IAAD,EAGY1C,mBAAU,CAAC,cAHvB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAIvB,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCZzB8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.047939ad.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\nconst [inputValue, setInputValue] = useState('');\r\n\r\nconst handleInputChange = (e) =>{\r\n    setInputValue(e.target.value)\r\n    \r\n}\r\n\r\nconst handleSubmit = (e) =>{\r\n    e.preventDefault(setCategories);\r\n   \r\n    if ( inputValue.trim().length > 2 ){\r\n        setCategories( cats => [ inputValue, ...cats]);\r\n        setInputValue( '' );\r\n    }\r\n    \r\n}\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           <input\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={ handleInputChange }\r\n           />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n  export const GetGifs = async( category ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI( category )}&api_key=h1lfeSINaijknWYM6nDmSCsHvaXMnmDw`\r\n    const resp = await fetch( url );\r\n    const {data}= await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return  gifs ;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    // console.log({id, title, url})\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n \r\n    return (\r\n        <>\r\n            <h3 className='animate__flash'>{ category }</h3>\r\n\r\n            { loading && <p className='animate__animate animate__flash'>Loading...</p>}\r\n            <div className='card-grid'>\r\n           \r\n                {\r\n                    images.map( img =>(\r\n                       <GifGridItem \r\n                       key={img.id}\r\n                       {...img} />\r\n                    ))\r\n               }\r\n\r\n            </div>\r\n        </>\r\n       \r\n    )\r\n}\r\n","\r\nimport {useEffect, useState} from 'react'\r\nimport { GetGifs } from '../helpers/GetGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\nconst [state, setState] = useState({\r\n    data: [],\r\n    loading:true\r\n})\r\n\r\nuseEffect( () =>{\r\n\r\n    GetGifs( category )\r\n    .then( imgs =>{\r\n\r\n      setTimeout( ( ) =>{\r\n        setState( {\r\n          data: imgs,\r\n          loading:false\r\n        })\r\n    }, 3000 );\r\n    \r\n    })\r\n\r\n}, [ category ])\r\n\r\n\r\n\r\n\r\n\r\n    return state;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  \r\n    const [categories, setCategories] =useState( ['One Punch'] );\r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories } />\r\n        <hr />\r\n        <ol>\r\n            {\r\n                categories.map( category =>(\r\n                    <GifGrid\r\n                    key={category} \r\n                    category={category} />\r\n                ))\r\n                    \r\n            }\r\n        </ol>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([ 'Spaiderman', ...categories ]) \r\n    // }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}